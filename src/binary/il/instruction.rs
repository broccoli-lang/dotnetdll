use super::super::metadata::index::Token;

#[derive(Debug)]
pub enum Instruction<'a> {
    // prefixes
    Constrained(Token, Box<Instruction<'a>>),
    No(u8, Box<Instruction<'a>>),
    Readonly(Box<Instruction<'a>>),
    Tail(Box<Instruction<'a>>),
    Unaligned(u8, Box<Instruction<'a>>),
    Volatile(Box<Instruction<'a>>),
    // base instructions
    Add,
    AddOvf,
    AddOvfUn,
    And,
    Arglist,
    Beq(i32),
    BeqS(i8),
    Bge(i32),
    BgeS(i8),
    BgeUn(i32),
    BgeUnS(i8),
    Bgt(i32),
    BgtS(i8),
    BgtUn(i32),
    BgtUnS(i8),
    Ble(i32),
    BleS(i8),
    BleUn(i32),
    BleUnS(i8),
    Blt(i32),
    BltS(i8),
    BltUn(i32),
    BltUnS(i8),
    BneUn(i32),
    BneUnS(i8),
    Br(i32),
    BrS(i8),
    Break,
    Brfalse(i32),
    BrfalseS(i8),
    Brtrue(i32),
    BrtrueS(i8),
    Call(Token),
    Calli(Token),
    Ceq,
    Cgt,
    CgtUn,
    Ckfinite,
    Clt,
    CltUn,
    ConvI1,
    ConvI2,
    ConvI4,
    ConvI8,
    ConvR4,
    ConvR8,
    ConvU1,
    ConvU2,
    ConvU4,
    ConvU8,
    ConvI,
    ConvU,
    ConvRUn,
    ConvOvfI1,
    ConvOvfI2,
    ConvOvfI4,
    ConvOvfI8,
    ConvOvfU1,
    ConvOvfU2,
    ConvOvfU4,
    ConvOvfU8,
    ConvOvfI,
    ConvOvfU,
    ConvOvfI1Un,
    ConvOvfI2Un,
    ConvOvfI4Un,
    ConvOvfI8Un,
    ConvOvfU1Un,
    ConvOvfU2Un,
    ConvOvfU4Un,
    ConvOvfU8Un,
    ConvOvfIUn,
    ConvOvfUUn,
    Cpblk,
    Div,
    DivUn,
    Dup,
    Endfilter,
    Endfinally,
    Initblk,
    Jmp(Token),
    Ldarg(u16),
    LdargS(u8),
    Ldarg0,
    Ldarg1,
    Ldarg2,
    Ldarg3,
    Ldarga(u16),
    LdargaS(u8),
    LdcI4(i32),
    LdcI8(i64),
    LdcR4(f32),
    LdcR8(f64),
    LdcI40,
    LdcI41,
    LdcI42,
    LdcI43,
    LdcI44,
    LdcI45,
    LdcI46,
    LdcI47,
    LdcI48,
    LdcI4M1,
    LdcI4S(i8),
    Ldftn(Token),
    LdindI1,
    LdindI2,
    LdindI4,
    LdindI8,
    LdindU1,
    LdindU2,
    LdindU4,
    LdindR4,
    LdindU8,
    LdindR8,
    LdindI,
    LdindRef,
    Ldloc(u16),
    LdlocS(u8),
    Ldloc0,
    Ldloc1,
    Ldloc2,
    Ldloc3,
    Ldloca(u16),
    LdlocaS(u8),
    Ldnull,
    Leave(i32),
    LeaveS(i8),
    Localloc,
    Mul,
    MulOvf,
    MulOvfUn,
    Neg,
    Nop,
    Not,
    Or,
    Pop,
    Rem,
    RemUn,
    Ret,
    Shl,
    Shr,
    ShrUn,
    Starg(u16),
    StargS(u8),
    StindI1,
    StindI2,
    StindI4,
    StindI8,
    StindR4,
    StindR8,
    StindI,
    StindRef,
    Stloc(u16),
    StlocS(u8),
    Stloc0,
    Stloc1,
    Stloc2,
    Stloc3,
    Sub,
    SubOvf,
    SubOvfUn,
    Switch(&'a [i32]),
    Xor,
    // object model instructions
    Box(Token),
    Callvirt(Token),
    Castclass(Token),
    Cpobj(Token),
    Initobj(Token),
    Isinst(Token),
    Ldelem(Token),
    LdelemI1,
    LdelemI2,
    LdelemI4,
    LdelemI8,
    LdelemU1,
    LdelemU2,
    LdelemU4,
    LdelemU8,
    LdelemR4,
    LdelemR8,
    LdelemI,
    LdelemRef,
    Ldelema(Token),
    Ldfld(Token),
    Ldflda(Token),
    Ldlen,
    Ldobj(Token),
    Ldsfld(Token),
    Ldsflda(Token),
    Ldstr(Token),
    Ldtoken(Token),
    Ldvirtftn(Token),
    Mkrefany(Token),
    Newarr(Token),
    Newobj(Token),
    Refanytype,
    Refanyval(Token),
    Rethrow,
    Sizeof(Token),
    Stelem(Token),
    StelemI1,
    StelemI2,
    StelemI4,
    StelemI8,
    StelemR4,
    StelemR8,
    StelemI,
    StelemRef,
    Stfld(Token),
    Stobj(Token),
    Stsfld(Token),
    Throw,
    Unbox(Token),
    UnboxAny(Token),
}

// TODO: impls
